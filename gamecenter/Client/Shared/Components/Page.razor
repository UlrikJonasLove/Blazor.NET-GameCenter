
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @foreach(var link in links)
        {
            <li @onclick="@(() => SelectedPages(link))"
                style="cursor: pointer;"
                class="page-item @(link.Enabled ? null : "disabled") @(link.Active ? "active" : null)">
            <span class="page-link" href="#">@link.Text</span>
            </li>
        }
    </ul>
</nav>

@code{
    [Parameter] public int CurrentPage { get; set; } = 1;
    [Parameter] public int AmountOfPages { get; set; }
    [Parameter] public int Radius { get; set; } = 3;
    [Parameter] public EventCallback<int> SelectedPage { get; set; }
    List<LinkModel> links;

    private async Task SelectedPages(LinkModel link)
    {
        if(link.Page == CurrentPage)
        {
            return;
        }
        if(!link.Enabled)
        {
            return;
        }

        CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }

    protected override void OnParametersSet()
    {
        Pages();
        base.OnParametersSet();
    }

    private void Pages()
    {
        links = new List<LinkModel>();
        var PreviousEnable = CurrentPage != 1;
        var PreviusPage = CurrentPage - 1;
        links.Add(new LinkModel(PreviusPage, PreviousEnable, "Previous"));

        for(int i = 1; i <= AmountOfPages; i++)
        {
            if(i >= CurrentPage - Radius && i <= CurrentPage + Radius)
            {
                links.Add(new LinkModel(i) { Active = CurrentPage == i });
            }
        }

        var nextPageEnabled = CurrentPage != AmountOfPages;
        var nextPage = CurrentPage + 1;
        links.Add(new LinkModel(nextPage, nextPageEnabled, "Next"));
    }
    
    class LinkModel
    {
        public string Text{ get; set; }
        public int Page { get; set; }
        public bool Enabled { get; set; } = true;
        public bool Active { get; set; } = false;

        public LinkModel(int page) : this(page, true){ }

        public LinkModel(int page, bool enabled) : this(page, enabled, page.ToString()){ }

        public LinkModel(int page, bool enabled, string text)
        {
            Page = page;
            Enabled = enabled;
            Text = text;
        } 
    }
}