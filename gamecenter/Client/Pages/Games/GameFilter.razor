@page "/games/search"
@inject IGameRepository gameRepository
@inject IGenreRepository genreRepository

<h3>Search for Games</h3>

<EditForm Model="gameFilterDto">
<div class="form-inline">
    <label for="title" class="sr-only">Title</label>
    <input type="text" class="form-control" id="title" placeholder="Game Title" 
        @bind-value="gameFilterDto.Title" @bind-value:event="oninput" @onkeypress="@((KeyboardEventArgs e) => TitleKeyPress(e))"/>
<div class="form-group mx-sm-3 mb-2">
    <select class="form-control" @bind="gameFilterDto.GenreId">
        <option value="0">Select a Genre</option> 
    @foreach(var genre in Genres) 
    {
        <option value="@genre.Id">@genre.Name</option>
    }
    </select>
    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="newlyReleases" />
        <label class="form-check-label" for="upcomingReleases">
            Newly Releases
        </label>
    </div>
    <div class="form-group mx-sm-3 mb-2">
        <input type="checkbox" class="form-check-input" id="upcomingReleases" />
        <label class="form-check-label" for="upcomingReleases">
            Upcoming Releases
        </label>
    </div>
    <button type="button" class="btn btn-primary mb-2 mx-sm-3" @onclick="SearchForGames">Filter</button>
    <button type="button" class="btn btn-danger mb-2" @onclick="Clear">Clear</button>
</div>
</div>
</EditForm>
<Page CurrentPage="gameFilterDto.Page" AmountOfPages="amountOfPages" SelectedPage="SelectedPage"/>
<GamesList Games="Games"></GamesList>

@code{
    private List<Game> Games;
    private GameFilterDTO gameFilterDto = new GameFilterDTO();
    private int amountOfPages;
    private List<Genre> Genres = new List<Genre>();
    
    protected async override Task OnInitializedAsync()
    {
        Genres = await genreRepository.GetGenres();
        await LoadGames();
    }

    private async Task SelectedPage(int page)
    {
        gameFilterDto.Page = page;
        await LoadGames();
    }

    private async Task LoadGames() 
    {
        var pageResponse = await gameRepository.GetGamesByFilter(gameFilterDto);
        Games = pageResponse.Response;
        amountOfPages = pageResponse.AmountOfPages;
    }
    
    private async Task SearchForGames() 
    {
        await LoadGames();    
    }

    private async Task Clear() 
    {
        
        gameFilterDto.Title = "";
        gameFilterDto.GenreId = 0; 
        await LoadGames();
    }

    private async Task TitleKeyPress(KeyboardEventArgs e) 
    {
        if(e.Key == "Enter")
        {
            //Implement here
            await SearchForGames();
        }
    }
}